BveTs Map 2.02

// 一つ後の閉塞に対する ATS 地上子を設置する。
// このファイルは Section.Begin 文で新しい閉塞を区切った直後に include すること。
//
// このファイルで設置する地上子は現地点 ($distance) にある閉塞に対する地上子ではなく
// 一つ後の閉塞 ($following_section_location) に対する地上子である。
// これらの地上子を二つ以上手前の閉塞に設置すると地上子が情報を送信する閉塞の
// インデックスがずれるので、一つ手前の閉塞の位置 ($distance) が確定してから
// その位置に応じて地上子を設置する。
//
// このファイルを include する前に以下の変数を設定しておく必要がある。
//  $distance = 現在位置 (Section.Begin 文のある位置)
//  $ats_stop_beacon_type = ATS-P 即時停止地上子の種別番号
//  $ats_stop_beacon_section = ATS-P 即時停止地上子に対応させる閉塞
//  $ats_update_1_beacon_type = ATS-P パターン更新地上子の種別番号
//  $ats_update_1_beacon_value = ATS-P パターン更新地上子に送る値
//  $ats_update_2_beacon_type = ATS-P パターン更新地上子の種別番号
//  $ats_update_2_beacon_value = ATS-P パターン更新地上子に送る値
//  $ats_update_m1_beacon_type = ATS-P パターン更新地上子の種別番号
//  $ats_update_m1_beacon_value = ATS-P パターン更新地上子に送る値
//  $ats_update_transponder = ATS-P パターン更新地上子ストラクチャーキー
//  $following_section_location = 一つ後の閉塞の開始位置
//  $_indexes = 新しい閉塞の信号インデックス設定 (信号現示受信地上子 (1012 番) に送る値)
// このファイルの中で以下の変数が変更される。
//  $following_section_location = この閉塞の開始位置 (= $distance)

$distance + 0.01;
	Beacon.Put(1012, 1, $_indexes);

// 即時停止地上子
$following_section_location - 25;
(distance + $distance + abs(distance - $distance)) / 2; // max(distance, $distance)
	Beacon.Put($ats_stop_beacon_type, $ats_stop_beacon_section, 0);

// 現示更新地上子
$following_section_location - 25;
(distance + $distance + abs(distance - $distance)) / 2; // max(distance, $distance)
	Beacon.Put($ats_update_1_beacon_type, 1, $ats_update_1_beacon_value);
	Beacon.Put($ats_update_2_beacon_type, 2, $ats_update_2_beacon_value);
	Beacon.Put($ats_update_m1_beacon_type, -1, $ats_update_m1_beacon_value);
distance - 3;
	Structure[$ats_update_transponder].Put0(0, 3, 0);
$following_section_location - 50;
(distance + $distance + abs(distance - $distance)) / 2; // max(distance, $distance)
	Beacon.Put($ats_update_1_beacon_type, 1, $ats_update_1_beacon_value);
	Beacon.Put($ats_update_2_beacon_type, 2, $ats_update_2_beacon_value);
	Beacon.Put($ats_update_m1_beacon_type, -1, $ats_update_m1_beacon_value);
distance - 3;
	Structure[$ats_update_transponder].Put0(0, 3, 0);
$following_section_location - 85;
(distance + $distance + abs(distance - $distance)) / 2; // max(distance, $distance)
	Beacon.Put($ats_update_1_beacon_type, 1, $ats_update_1_beacon_value);
	Beacon.Put($ats_update_2_beacon_type, 2, $ats_update_2_beacon_value);
	Beacon.Put($ats_update_m1_beacon_type, -1, $ats_update_m1_beacon_value);
distance - 3;
	Structure[$ats_update_transponder].Put0(0, 3, 0);
$following_section_location - 130;
(distance + $distance + abs(distance - $distance)) / 2; // max(distance, $distance)
	Beacon.Put($ats_update_1_beacon_type, 1, $ats_update_1_beacon_value);
	Beacon.Put($ats_update_2_beacon_type, 2, $ats_update_2_beacon_value);
	Beacon.Put($ats_update_m1_beacon_type, -1, $ats_update_m1_beacon_value);
distance - 3;
	Structure[$ats_update_transponder].Put0(0, 3, 0);
$following_section_location - 180;
(distance + $distance + abs(distance - $distance)) / 2; // max(distance, $distance)
	Beacon.Put($ats_update_1_beacon_type, 1, $ats_update_1_beacon_value);
	Beacon.Put($ats_update_2_beacon_type, 2, $ats_update_2_beacon_value);
	Beacon.Put($ats_update_m1_beacon_type, -1, $ats_update_m1_beacon_value);
distance - 3;
	Structure[$ats_update_transponder].Put0(0, 3, 0);
$following_section_location - 280;
(distance + $distance + abs(distance - $distance)) / 2; // max(distance, $distance)
	Beacon.Put($ats_update_1_beacon_type, 1, $ats_update_1_beacon_value);
	Beacon.Put($ats_update_2_beacon_type, 2, $ats_update_2_beacon_value);
	Beacon.Put($ats_update_m1_beacon_type, -1, $ats_update_m1_beacon_value);
distance - 3;
	Structure[$ats_update_transponder].Put0(0, 3, 0);
$following_section_location - 600;
(distance + $distance + abs(distance - $distance)) / 2; // max(distance, $distance)
	Beacon.Put($ats_update_1_beacon_type, 1, $ats_update_1_beacon_value);
	Beacon.Put($ats_update_2_beacon_type, 2, $ats_update_2_beacon_value);
	Beacon.Put($ats_update_m1_beacon_type, -1, $ats_update_m1_beacon_value);
distance - 3;
	Structure[$ats_update_transponder].Put0(0, 3, 0);

$following_section_location = $distance;
